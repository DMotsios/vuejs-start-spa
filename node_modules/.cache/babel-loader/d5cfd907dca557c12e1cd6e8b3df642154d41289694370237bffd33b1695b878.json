{"ast":null,"code":"import NavbarLink from './NavbarLink.vue';\nexport default {\n  components: {\n    NavbarLink\n  },\n  computed: {\n    publishedPages() {\n      return this.pages.filter(page => page.published);\n    }\n  },\n  created() {\n    this.getThemeSetting();\n  },\n  props: ['pages', 'activePage', 'navLinkClick'],\n  data() {\n    return {\n      theme: 'light'\n    };\n  },\n  methods: {\n    changeTheme() {\n      this.theme = this.theme === 'light' ? 'dark' : 'light';\n      this.storeThemeSetting();\n    },\n    storeThemeSetting() {\n      localStorage.setItem('theme', this.theme);\n    },\n    getThemeSetting() {\n      let theme = localStorage.getItem('theme');\n      if (theme) {\n        this.theme = theme;\n      } else {\n        theme = 'light';\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavbarLink","components","computed","publishedPages","pages","filter","page","published","created","getThemeSetting","props","data","theme","methods","changeTheme","storeThemeSetting","localStorage","setItem","getItem"],"sources":["C:\\Users\\motsi\\OneDrive\\Desktop\\vuejs\\vue-start-spa\\src\\components\\Navbar.vue"],"sourcesContent":["<template>\r\n    <nav :class=\"[`navbar-${theme}`, `bg-${theme}`, 'vanbar', 'navbar-expand-lg']\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">My Vue</a>\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li v-for=\"(page, index) in pages\" class=\"nav-item\" :key=\"index\">\r\n                    <navbar-link :page=\"page\" :isActive=\"activePage == index\" @click.prevent=\"navLinkClick(index)\">\r\n                    </navbar-link>\r\n                </li>\r\n            </ul>\r\n            <form class=\"d-flex\">\r\n                <button class=\"btn btn-primary\" @click.prevent=\"changeTheme()\">\r\n                    Toggle\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </nav>\r\n\r\n</template>\r\n\r\n<script>\r\nimport NavbarLink from './NavbarLink.vue'\r\n\r\nexport default {\r\n    components: {\r\n        NavbarLink\r\n    },\r\n    computed: {\r\n        publishedPages() {\r\n            return this.pages.filter(page => page.published);\r\n        }\r\n    },\r\n    created() {\r\n        this.getThemeSetting()\r\n    },\r\n    props: ['pages', 'activePage', 'navLinkClick'],\r\n    data() {\r\n        return {\r\n            theme: 'light'\r\n        }\r\n    },\r\n    methods: {\r\n        changeTheme() {\r\n            this.theme = this.theme === 'light' ? 'dark' : 'light'\r\n            this.storeThemeSetting()\r\n        },\r\n\r\n        storeThemeSetting() {\r\n            localStorage.setItem('theme', this.theme)\r\n        },\r\n\r\n        getThemeSetting() {\r\n            let theme = localStorage.getItem('theme')\r\n            if (theme) {\r\n                this.theme = theme\r\n            } else {\r\n                theme = 'light';\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":"AAqBA,OAAOA,UAAS,MAAO,kBAAiB;AAExC,eAAe;EACXC,UAAU,EAAE;IACRD;EACJ,CAAC;EACDE,QAAQ,EAAE;IACNC,cAAcA,CAAA,EAAG;MACb,OAAO,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,SAAS,CAAC;IACpD;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,eAAe,CAAC;EACzB,CAAC;EACDC,KAAK,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,cAAc,CAAC;EAC9CC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE;IACX;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,WAAWA,CAAA,EAAG;MACV,IAAI,CAACF,KAAI,GAAI,IAAI,CAACA,KAAI,KAAM,OAAM,GAAI,MAAK,GAAI,OAAM;MACrD,IAAI,CAACG,iBAAiB,CAAC;IAC3B,CAAC;IAEDA,iBAAiBA,CAAA,EAAG;MAChBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,IAAI,CAACL,KAAK;IAC5C,CAAC;IAEDH,eAAeA,CAAA,EAAG;MACd,IAAIG,KAAI,GAAII,YAAY,CAACE,OAAO,CAAC,OAAO;MACxC,IAAIN,KAAK,EAAE;QACP,IAAI,CAACA,KAAI,GAAIA,KAAI;MACrB,OAAO;QACHA,KAAI,GAAI,OAAO;MACnB;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}