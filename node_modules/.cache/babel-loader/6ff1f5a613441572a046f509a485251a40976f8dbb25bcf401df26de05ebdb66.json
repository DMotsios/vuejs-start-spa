{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_navbar = _resolveComponent(\"navbar\");\n  const _component_page_viewer = _resolveComponent(\"page-viewer\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_navbar, {\n    pages: $data.pages,\n    \"active-page\": $data.activePage,\n    \"nav-link-click\": index => $data.activePage = index\n  }, null, 8 /* PROPS */, [\"pages\", \"active-page\", \"nav-link-click\"]), _createVNode(_component_page_viewer, {\n    page: $data.pages[$data.activePage]\n  }, null, 8 /* PROPS */, [\"page\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_navbar","pages","$data","activePage","index","_component_page_viewer","page"],"sources":["C:\\Users\\motsi\\OneDrive\\Desktop\\vuejs\\vue-start-spa\\src\\App.vue"],"sourcesContent":["<template>\n  <navbar :pages=\"pages\" :active-page=\"activePage\" :nav-link-click=\"(index) => activePage = index\"></navbar>\n  <page-viewer :page=\"pages[activePage]\"></page-viewer>\n</template>\n\n<script>\nimport PageViewer from './components/PageViewer.vue'\nimport Navbar from './components/Navbar.vue'\n\nexport default {\n  components: {\n    Navbar,\n    PageViewer,\n\n  },\n  data() {\n    return {\n      activePage: 0,\n      pages: this.getPages()\n    }\n  },\n  methods: {\n    async getPages(){\n      let res= await fetch('pages.json');\n      let data = await res.json();\n\n      return data;\n    }\n  }\n}\n</script>"],"mappings":";;;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAA0GC,iBAAA;IAAjGC,KAAK,EAAEC,KAAA,CAAAD,KAAK;IAAG,aAAW,EAAEC,KAAA,CAAAC,UAAU;IAAG,gBAAc,EAAGC,KAAK,IAAKF,KAAA,CAAAC,UAAU,GAAGC;uEAC1FL,YAAA,CAAqDM,sBAAA;IAAvCC,IAAI,EAAEJ,KAAA,CAAAD,KAAK,CAACC,KAAA,CAAAC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}